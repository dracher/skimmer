// Generated by CoffeeScript 1.6.3
var exec_sql, get_session_id_by_data, get_specific_date,
  __slice = [].slice;

exec_sql = function() {
  var args, call_back, col_name, db, ret, sql;
  sql = arguments[0], db = arguments[1], col_name = arguments[2], call_back = arguments[3], args = 5 <= arguments.length ? __slice.call(arguments, 4) : [];
  ret = [];
  return db.serialize(function() {
    return db.each(sql, function(err, row) {
      if (err) {
        console.log(err);
      }
      if (col_name) {
        ret.push(row[col_name]);
      } else {
        ret.push(row);
      }
    }, function(err, rn) {
      call_back(ret, args);
    });
  });
};

get_specific_date = function() {
  var args, cbk, db, sql;
  db = arguments[0], cbk = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
  console.log(args);
  if (args.length === 1 && !Array.isArray(args[0])) {
    console.log("Query for last " + args + " day(s)");
    sql = 'select date(c_time) as days from env_list ' + 'group by date(c_time) ' + 'order by date(c_time) ' + 'desc ' + ("limit " + args[0]);
    exec_sql(sql, db, null, function(data) {
      return cbk(data);
    });
  }
  if (args.length === 2) {
    console.log("Query for data interval");
    sql = 'select distinct date(c_time) as day from env_list ' + ("where day between '" + args[0] + "' and '" + args[1] + "'");
    return exec_sql(sql, db, null, function(data) {
      return cbk(data);
    });
  }
};

get_session_id_by_data = function(db, day, cbk) {
  var sql;
  sql = 'select session_id from env_list ' + "where date(c_time)='%s'";
  return get_specific_date(db, function(data) {
    var d, i, _i, _len, _results;
    _results = [];
    for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
      d = data[i];
      _results.push(exec_sql(sql.replace('%s', d['days']), db, 'session_id', cbk, d['days']));
    }
    return _results;
  }, day);
};

exports.GP = get_session_id_by_data;
